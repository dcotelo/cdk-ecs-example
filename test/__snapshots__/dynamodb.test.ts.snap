// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DynamoDB - Snapshot 1`] = `
Object {
  "Outputs": Object {
    "MYCUSTOMTABLETableARN3A1A8A02": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "DEVMYCUSTOMTABLE0351AA05",
          "Arn",
        ],
      },
    },
    "MYCUSTOMTABLETopicARN7FE402CF": Object {
      "Value": Object {
        "Ref": "MYCUSTOMTABLETopic652FA786",
      },
    },
    "MyFargateServiceLoadBalancerDNS704F6391": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "MyFargateServiceLBDE830E97",
          "DNSName",
        ],
      },
    },
    "MyFargateServiceServiceURL4CF8398A": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "http://",
            Object {
              "Fn::GetAtt": Array [
                "MyFargateServiceLBDE830E97",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Resources": Object {
    "DEVMYCUSTOMTABLE0351AA05": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "MY_CUSTOM_TABLE_ID",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "MY_CUSTOM_TABLE_ID",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "StreamSpecification": Object {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TableName": "DEV_MY_CUSTOM_TABLE",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "MYCUSTOMTABLETopic652FA786": Object {
      "Properties": Object {
        "DisplayName": "DEV_MY_CUSTOM_TABLE_TOPIC",
        "Tags": Array [
          Object {
            "Key": "backup-plan",
            "Value": "myBackupPlan",
          },
        ],
      },
      "Type": "AWS::SNS::Topic",
    },
    "MyCluster4C1BA579": Object {
      "Properties": Object {
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "enabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "MyFargateServiceF490C034": Object {
      "DependsOn": Array [
        "MyFargateServiceLBPublicListenerECSGroup4A3EDF05",
        "MyFargateServiceLBPublicListener61A1042F",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "MyCluster4C1BA579",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DesiredCount": 6,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "web",
            "ContainerPort": 3000,
            "TargetGroupArn": Object {
              "Ref": "MyFargateServiceLBPublicListenerECSGroup4A3EDF05",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "MyFargateServiceSecurityGroup7016792A",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E",
              },
              Object {
                "Ref": "MyVpcPrivateSubnet2Subnet0040C983",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "MyFargateServiceTaskDef5DA17B39",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "MyFargateServiceLBDE830E97": Object {
      "DependsOn": Array [
        "MyVpcPublicSubnet1DefaultRoute95FDF9EB",
        "MyVpcPublicSubnet2DefaultRoute052936F6",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "MyFargateServiceLBSecurityGroup6FBF16F1",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "MyVpcPublicSubnet1SubnetF6608456",
          },
          Object {
            "Ref": "MyVpcPublicSubnet2Subnet492B6BFB",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "MyFargateServiceLBPublicListener61A1042F": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "MyFargateServiceLBPublicListenerECSGroup4A3EDF05",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "MyFargateServiceLBDE830E97",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "MyFargateServiceLBPublicListenerECSGroup4A3EDF05": Object {
      "Properties": Object {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "MyFargateServiceLBSecurityGroup6FBF16F1": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB MyDynamoTestStackMyFargateServiceLB180784C0",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": Object {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "MyFargateServiceLBSecurityGrouptoMyDynamoTestStackMyFargateServiceSecurityGroup08D99E023000F3B6A7A7": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "MyFargateServiceSecurityGroup7016792A",
            "GroupId",
          ],
        },
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "MyFargateServiceLBSecurityGroup6FBF16F1",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "MyFargateServiceSecurityGroup7016792A": Object {
      "Properties": Object {
        "GroupDescription": "MyDynamoTestStack/MyDynamoTestStack/MyFargateService/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "MyFargateServiceSecurityGroupfromMyDynamoTestStackMyFargateServiceLBSecurityGroup8EC6E3873000379F6D46": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "MyFargateServiceSecurityGroup7016792A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "MyFargateServiceLBSecurityGroup6FBF16F1",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "MyFargateServiceTaskDef5DA17B39": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Essential": true,
            "Image": Object {
              "Fn::Sub": "\${AWS::AccountId}.dkr.ecr.\${AWS::Region}.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}:b30a799654496292ff4c2b4de49f5c10490b05e94e9feda1b85df7775981434f",
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "MyFargateServiceTaskDefwebLogGroup4A6C44E8",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "MyFargateService",
              },
            },
            "Name": "web",
            "PortMappings": Array [
              Object {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "MyFargateServiceTaskDefExecutionRoleD6305504",
            "Arn",
          ],
        },
        "Family": "MyDynamoTestStackMyFargateServiceTaskDef6CB2CA6F",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "MyFargateServiceTaskDefTaskRole62C7D397",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "MyFargateServiceTaskDefExecutionRoleD6305504": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "MyFargateServiceTaskDefExecutionRoleDefaultPolicyEC22B20F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    Object {
                      "Fn::Sub": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MyFargateServiceTaskDefwebLogGroup4A6C44E8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MyFargateServiceTaskDefExecutionRoleDefaultPolicyEC22B20F",
        "Roles": Array [
          Object {
            "Ref": "MyFargateServiceTaskDefExecutionRoleD6305504",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MyFargateServiceTaskDefTaskRole62C7D397": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "MyFargateServiceTaskDefwebLogGroup4A6C44E8": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "MyVpcF9F0CA6F": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "MyVpcIGW5C4A4F63": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "MyVpcPrivateSubnet1DefaultRouteA8CDE2FA": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "MyVpcPublicSubnet1NATGatewayAD3400C1",
        },
        "RouteTableId": Object {
          "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyVpcPrivateSubnet1RouteTable8819E6E2": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVpcPrivateSubnet1RouteTableAssociation56D38C7E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "MyVpcPrivateSubnet1RouteTable8819E6E2",
        },
        "SubnetId": Object {
          "Ref": "MyVpcPrivateSubnet1Subnet5057CF7E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVpcPrivateSubnet1Subnet5057CF7E": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVpcPrivateSubnet2DefaultRoute9CE96294": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "MyVpcPublicSubnet2NATGateway91BFBEC9",
        },
        "RouteTableId": Object {
          "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyVpcPrivateSubnet2RouteTableAssociation86A610DA": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "MyVpcPrivateSubnet2RouteTableCEDCEECE",
        },
        "SubnetId": Object {
          "Ref": "MyVpcPrivateSubnet2Subnet0040C983",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVpcPrivateSubnet2RouteTableCEDCEECE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVpcPrivateSubnet2Subnet0040C983": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVpcPublicSubnet1DefaultRoute95FDF9EB": Object {
      "DependsOn": Array [
        "MyVpcVPCGW488ACE0D",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "MyVpcIGW5C4A4F63",
        },
        "RouteTableId": Object {
          "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyVpcPublicSubnet1EIP096967CB": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "MyVpcPublicSubnet1NATGatewayAD3400C1": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "MyVpcPublicSubnet1EIP096967CB",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "MyVpcPublicSubnet1SubnetF6608456",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "MyVpcPublicSubnet1RouteTableAssociation2ECEE1CB": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "MyVpcPublicSubnet1RouteTableC46AB2F4",
        },
        "SubnetId": Object {
          "Ref": "MyVpcPublicSubnet1SubnetF6608456",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVpcPublicSubnet1RouteTableC46AB2F4": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVpcPublicSubnet1SubnetF6608456": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVpcPublicSubnet2DefaultRoute052936F6": Object {
      "DependsOn": Array [
        "MyVpcVPCGW488ACE0D",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "MyVpcIGW5C4A4F63",
        },
        "RouteTableId": Object {
          "Ref": "MyVpcPublicSubnet2RouteTable1DF17386",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyVpcPublicSubnet2EIP8CCBA239": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "MyVpcPublicSubnet2NATGateway91BFBEC9": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "MyVpcPublicSubnet2EIP8CCBA239",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "MyVpcPublicSubnet2Subnet492B6BFB",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "MyVpcPublicSubnet2RouteTable1DF17386": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVpcPublicSubnet2RouteTableAssociation227DE78D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "MyVpcPublicSubnet2RouteTable1DF17386",
        },
        "SubnetId": Object {
          "Ref": "MyVpcPublicSubnet2Subnet492B6BFB",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVpcPublicSubnet2Subnet492B6BFB": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "MyDynamoTestStack/MyDynamoTestStack/MyVpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVpcVPCGW488ACE0D": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "MyVpcIGW5C4A4F63",
        },
        "VpcId": Object {
          "Ref": "MyVpcF9F0CA6F",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
}
`;
